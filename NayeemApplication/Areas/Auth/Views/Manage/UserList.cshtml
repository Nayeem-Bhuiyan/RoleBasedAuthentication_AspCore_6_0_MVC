@model UserListViewModel

@using NayeemApplication.Services.AuthService.Interfaces
@using System
@inject IUserInfoes userInfo
@inject IUserServiceSP userServiceSP

@{
    ViewData["Title"] = "User List";
    Layout = "~/Views/Shared/_Layout.cshtml";

    var userInfos = await userServiceSP.GetUserInfoByUser(User.Identity.Name);
    var roleName = await userInfo.GetUserRoleByByUserId(userInfos.Id);
}

<!--begin::Toolbar-->
@if (roleName == "Super Admin")
{
    <!--begin::Toolbar-->
    <div class="toolbar" id="kt_toolbar">
        <div class="container-fluid d-flex flex-stack flex-wrap flex-sm-nowrap">
            <!--begin::Info-->
            <div class="d-flex flex-column align-items-start justify-content-center flex-wrap me-2">
                <!--begin::Title-->
                <h1 class="text-dark fw-bolder my-1 fs-2">
                    User Information List
                    <small class="text-muted fs-6 fw-normal ms-1"></small>
                </h1>
                <!--end::Title-->
                <!--begin::Breadcrumb-->
                <ul class="breadcrumb fw-bold fs-base my-1">
                    <li class="breadcrumb-item text-muted">
                        <a href="/" class="text-muted text-hover-primary">Home</a>
                    </li>
                    <li class="breadcrumb-item text-muted">Dashboards</li>
                    <li class="breadcrumb-item text-dark">User List</li>
                </ul>
                <!--end::Breadcrumb-->
            </div>
            <!--end::Info-->
        </div>
    </div>
    <!--end::Toolbar-->

    <!--begin::Post-->
        <!--begin::Container-->
        <div class="container-xxl">
            <!--begin::Row-->
            <div class="row g-xl-12">
                <!--begin::Col-->
                <div class="col-xxl-12">
                    <!--begin::Row-->
                    <div class="row g-xl-12">
                        <!--begin::Col-->
                        <div class="col-xl-12">
                            <!--begin::Chart Widget 1-->
                            <div class="card card-xl-stretch  mb-5 mb-xl-8">
                                <!--begin::Body-->
                                <div class="card-body p-0 d-flex justify-content-between flex-column">
                                    <div class="table-responsive p-5">
                                        <table id="tblUserList"  class="table table-striped table-row-bordered gy-5 gs-7 border rounded">
                                            <thead>
                                                <tr class="fw-bolder fs-6 text-gray-800 px-7">
                                                    <th>First Name</th>
                                                    <th>Last Name</th>
                                                    <th>Country</th>
                                                    <th>City</th>
                                                    <th>Email</th>
                                                    <th>Roles</th>
                                                    <th>Photo</th>
                                                    <th>CV Download</th>
                                                    <th>Read CV</th>

                                                    <th>Action</th>
                                                </tr>
                                            </thead>
                                            <tbody class="fw-bold text-gray-600">
                                                @foreach (var data in Model.aspNetUsersViewModels)
                                                {
                                                    var userName = data.UserName;
                                                    var FirstName = data.UserName.Substring(0, userName.IndexOf("_"));
                                                    var LastName = data.UserName.Substring(userName.IndexOf("_")+1);
                                                    var dob = data.DateOfBirth.Value.ToString("MM/dd/yyyy");
                                                <tr>
                                                    


                                                    <td>@FirstName</td>
                                                    <td>@LastName</td>
                                                    <td>@data.userCountryName</td>
                                                    <td>@data.userCityName</td>
                                                    <td>@data.Email</td>
                                                    <td>@data.roleName</td>
                                                    <td><img src="/UsersPhoto/@data.userImg" alt="Alternate Text" height="50" width="50" /></td>
                                                    <td><a href="/UsersCV/@data.userCV">User CV</a></td>
                                                    <td><a href="#" onclick="ShowPdf('@data.userCV')">Read CV</a></td>

                                                    <td class="text-nowrap">
                                                        <a class="btn btn-info btn-sm" title="Edit" onclick="Edit('@data.aspnetId','@FirstName','@LastName','@data.UserName','@data.Email','@data.roleName','@data.roleId',@data.userCountryId,@data.userCityId,'@data.userImg','@data.userCV','@data.mobileNo','@dob')" href="javascript:void(0)"><i class="bi bi-pencil-square"></i></a>
                                                        <a class="btn btn-success btn-sm" title="Reset Password" onclick="SetUserInfo('@data.UserName','@data.aspnetId')" href="#" data-bs-toggle="modal" data-bs-target="#resetPasswordModal"><i class="bi bi-arrow-repeat"></i></a>
                                                        <a class="btn btn-danger btn-sm" title="Delete User" onclick="Remove('@data.aspnetId','@data.UserName')" href="#"><i class="bi bi-trash"></i></a>
                                                        @if (data.isActive == true)
                                                        {
                                                            <a class="btn btn-primary btn-sm" title="InActive User" onclick="InActive('@data.aspnetId')" href="#"><i class="bi bi-box-arrow-up"></i></a>
                                                        }
                                                        else
                                                        {
                                                            <a class="btn btn-success btn-sm" title="Active User" onclick="Active('@data.aspnetId')" href="#"><i class="bi bi-box-arrow-in-down"></i></a>
                                                        }
                                                    </td>
                                                </tr>
                                                }
                                            </tbody>
                                        </table>
                                    </div>
                                </div>
                            </div>
                            <!--end::Chart Widget 1-->
                        </div>
                        <!--end::Col-->
                    </div>
                    <!--end::Row-->
                </div>
                <!--end::Col-->
            </div>
            <!--end::Row-->
        </div>
        <!--end::Container-->
    <!--end::Post-->
}
else
{
    <!--begin::Post-->
    <div class="post fs-6 d-flex flex-column-fluid" id="kt_post">
        <!--begin::Container-->
        <div class="container-xxl">
            <!--begin::Row-->
            <div class="row g-xl-12">
                <!--begin::Col-->
                <div class="col-xxl-12">
                    <!--begin::Row-->
                    <div class="row g-xl-12">
                        <!--begin::Col-->
                        <div class="col-xl-12">
                            <!--begin::Chart Widget 1-->
                            <div class="card">
                                <!--begin::Body-->
                                <div class="card-body">
                                    <!--begin::Main-->
                                    <div class="d-flex flex-column flex-root">
                                        <!--begin::Authentication - 404 Page-->
                                        <div class="d-flex flex-column flex-center flex-column-fluid p-10">
                                            <!--begin::Illustration-->
                                            <img src="/assets/media/illustrations/sigma-1/18.png" alt="" class="mw-100 mb-10 h-lg-450px" />
                                            <!--end::Illustration-->
                                            <!--begin::Message-->
                                            <h1 class="fw-bold mb-10" style="color: #A3A3C7">Access Denied</h1>
                                            <!--end::Message-->
                                            <!--begin::Link-->
                                            <a href="/" class="btn btn-primary">Return Home</a>
                                            <!--end::Link-->
                                        </div>
                                        <!--end::Authentication - 404 Page-->
                                    </div>
                                    <!--end::Main-->
                                </div>
                            </div>
                            <!--end::Chart Widget 1-->
                        </div>
                        <!--end::Col-->
                    </div>
                    <!--end::Row-->
                </div>
                <!--end::Col-->
            </div>
            <!--end::Row-->
        </div>
        <!--end::Container-->
    </div>
    <!--end::Post-->
}



<div class="modal fade" tabindex="-1" id="resetPasswordModal">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Change Password</h5>

                <!--begin::Close-->
                <div class="btn btn-icon btn-sm btn-active-icon-primary" data-bs-dismiss="modal">
                    <!--begin::Svg Icon | path: icons/duotune/arrows/arr061.svg-->
                    <span class="svg-icon svg-icon-2x">
                        <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none">
                            <rect opacity="0.5" x="6" y="17.3137" width="16" height="2" rx="1" transform="rotate(-45 6 17.3137)" fill="black" />
                            <rect x="7.41422" y="6" width="16" height="2" rx="1" transform="rotate(45 7.41422 6)" fill="black" />
                        </svg>
                    </span>
                    <!--end::Svg Icon-->
                </div>
                <!--end::Close-->
            </div>

            <div class="modal-body">

                <!--begin::Form-->
                <form id="kt_docs_formvalidation_password" class="form" action="#" autocomplete="off">
                    <div class="input-group mb-5">
                        <span class="input-group-text required">User Name</span>
                        <input type="text" class="form-control" name="userName" id="userName" placeholder="User Name" aria-label="userName" aria-describedby="userName" required />
                    </div>
                    <!--begin::Input group-->
                    <div class="mb-10 fv-row" data-kt-password-meter="true">
                        <!--begin::Wrapper-->
                        <div class="mb-1">
                            <!--begin::Label-->
                            <label class="form-label fw-bold fs-6 mb-2 required">
                                New Password
                            </label>
                            <!--end::Label-->
                            <!--begin::Input wrapper-->
                            <div class="position-relative mb-3">
                                <input class="form-control form-control-lg form-control-solid" type="password" placeholder="" name="new_password" id="new_password" autocomplete="off" />

                                <span class="btn btn-sm btn-icon position-absolute translate-middle top-50 end-0 me-n2" data-kt-password-meter-control="visibility">
                                    <i class="bi bi-eye-slash fs-2"></i>

                                    <i class="bi bi-eye fs-2 d-none"></i>
                                </span>
                            </div>
                            <!--end::Input wrapper-->
                            <!--begin::Meter-->
                            <div class="d-flex align-items-center mb-3" data-kt-password-meter-control="highlight">
                                <div class="flex-grow-1 bg-secondary bg-active-success rounded h-5px me-2"></div>
                                <div class="flex-grow-1 bg-secondary bg-active-success rounded h-5px me-2"></div>
                                <div class="flex-grow-1 bg-secondary bg-active-success rounded h-5px me-2"></div>
                                <div class="flex-grow-1 bg-secondary bg-active-success rounded h-5px"></div>
                            </div>
                            <!--end::Meter-->
                        </div>
                        <!--end::Wrapper-->
                        <!--begin::Hint-->
                        <div class="text-muted">
                            Use 8 or more characters with a mix of letters, numbers & symbols.
                        </div>
                        <!--end::Hint-->
                    </div>
                    <!--end::Input group--->
                    <!--begin::Input group--->
                    <div class="fv-row mb-10">
                        <label class="form-label fw-bold fs-6 mb-2 required">Confirm New Password</label>

                        <input class="form-control form-control-lg form-control-solid" type="password" placeholder="" name="confirm_password" autocomplete="off" />
                    </div>
                    <!--end::Input group--->
                    <!--begin::Actions-->
                    <button id="kt_docs_formvalidation_password_submit" type="submit" class="btn btn-primary">
                        <span class="indicator-label">
                            Save
                        </span>
                        <span class="indicator-progress">
                            Please wait... <span class="spinner-border spinner-border-sm align-middle ms-2"></span>
                        </span>
                    </button>
                    <!--end::Actions-->
                </form>
                <!--end::Form-->
            </div>
        </div>
    </div>
</div>


@*Edit Modal*@

<div class="modal fade" id="EditUserInfoModal" tabindex="-1" aria-hidden="true">
    <!--begin::Modal dialog-->
    <div class="modal-dialog modal-dialog-centered min-w-xl-1000px">
        <!--begin::Modal content-->
        <div class="modal-content">
            <!--begin::Modal header-->
            <div class="modal-header">
                <!--begin::Modal title-->
                <h3 class="fw-boldest text-dark fs-1 mb-0">Edit User Info</h3>
                <!--end::Modal title-->
                <!--begin::Close-->
                <div class="btn btn-icon btn-sm btn-active-icon-primary" data-bs-dismiss="modal">
                    <!--begin::Svg Icon | path: icons/duotune/arrows/arr061.svg-->
                    <span class="svg-icon svg-icon-2x">
                        <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none">
                            <rect opacity="0.5" x="6" y="17.3137" width="16" height="2" rx="1" transform="rotate(-45 6 17.3137)" fill="black" />
                            <rect x="7.41422" y="6" width="16" height="2" rx="1" transform="rotate(45 7.41422 6)" fill="black" />
                        </svg>
                    </span>
                    <!--end::Svg Icon-->
                </div>
                <!--end::Close-->
            </div>
            <!--end::Modal header-->
            <!--begin::Modal body-->
            <div class="modal-body scroll-y mx-5 mx-xl-15 my-7">

                <div class="row">
                    <div class="col-md-12">
                        <div class="d-xl-flex d-inline-block justify-content-lg-start">
                            <img src="" id="userImageShow" name="userImageShow" alt="Alternate Text" />
                        </div>
                    </div>
                </div>

                <div class="row">
                    <div class="col-md-12">
                        <!--begin::Form-->
                        <form id="frmData" class="form" method="post">
                            <div asp-validation-summary="All" class="text-danger"></div>
                            <input type="hidden" id="userId" name="userId">
                            <input type="hidden" id="PreRoleId" name="PreRoleId">

                            <div class="row">
                                <div class="col-md-6">
                                    <div class="input-group mb-5">
                                        <span class="input-group-text">Email</span>
                                        <input type="text" class="form-control" name="email" id="email" placeholder="Email" aria-label="email" aria-describedby="email" />
                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <div class="input-group mb-5">
                                        <span class="input-group-text">Role</span>
                                        <select class="form-select" aria-label="Select example" name="RoleId" id="RoleId">
                                            <option value="0" selected="selected">Select User Role</option>
                                            @foreach (var data in Model.userRoles)
                                            {
                                                <option value="@data.RoleName">@data.RoleName</option>
                                            }
                                        </select>
                                    </div>
                                </div>

                            </div>
                            <div class="row">
                                <div class="col-md-6">
                                    <div class="input-group mb-5">
                                        <span class="input-group-text required">First Name</span>
                                        <input type="text" class="form-control" name="FirstName" id="FirstName" placeholder="First Name" aria-label="FirstName" aria-describedby="FirstName" />
                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <div class="input-group mb-5">
                                        <span class="input-group-text">Last Name</span>
                                        <input type="text" class="form-control" name="LastName" id="LastName" placeholder="Last Name" aria-label="LastName" aria-describedby="LastName" />
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-md-6">
                                    <div class="input-group mb-5">
                                        <span class="input-group-text">Upload Photo</span>
                                        <input type="file" class="form-control" name="userImg" id="userImg" aria-label="userImg" aria-describedby="userImg" />
                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <div class="input-group mb-5">
                                        <span class="input-group-text">Upload CV</span>
                                        <input type="file" class="form-control" name="userCV" id="userCV" aria-label="userCV" aria-describedby="userCV" />
                                    </div>
                                </div>
                            </div>

                            <div class="row">
                                <div class="col-md-6">
                                    <div class="input-group mb-5">
                                        <span class="input-group-text">Date Of Birth</span>
                                        <input type="text" class="form-control" placeholder="Date Of Birth" id="DateOfBirth" name="DateOfBirth" aria-label="DateOfBirth" aria-describedby="DateOfBirth" />
                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <div class="input-group mb-5">
                                        <span class="input-group-text">Mobile</span>
                                        <input type="text" class="form-control" placeholder="Mobile No" name="mobileNo" id="mobileNo" aria-label="mobileNo" aria-describedby="mobileNo" />
                                    </div>

                                </div>
                            </div>
                            <div class="row">
                                <div class="col-md-6">
                                    <select class="form-select" aria-label="Select example" name="CityId" id="CityId">
                                        <option value="0" selected="selected">Select City</option>
                                        @foreach (var data in Model.Cities)
                                        {
                                            <option value="@data?.Id">@data?.cityName</option>
                                        }
                                    </select>
                                </div>
                                <div class="col-md-6">
                                    <select class="form-select" aria-label="Select example" name="CountryId" id="CountryId">
                                        <option value="0" selected="selected">Select Country</option>
                                        @foreach (var data in Model.Countries)
                                        {
                                            <option value="@data?.Id">@data?.CountryName</option>
                                        }
                                    </select>
                                </div>
                            </div>
                            <div class="input-group mb-5"></div>
                            <!--begin::Actions-->
                            <div class="text-lg-end pt-15">
                                <button type="reset" id="btnCancel" class="btn btn-light me-3" data-bs-dismiss="modal">Cancel</button>
                                <button type="submit" id="btnSave" class="btn btn-primary">
                                    <span class="indicator-label">Submit</span>
                                    <span class="indicator-progress">
                                        Please wait...
                                        <span class="spinner-border spinner-border-sm align-middle ms-2"></span>
                                    </span>
                                </button>
                            </div>
                            <!--end::Actions-->
                        </form>
                        <!--end::Form-->
                    </div>
                </div>
            </div>
            <!--end::Modal body-->
        </div>
        <!--end::Modal content-->
    </div>
    <!--end::Modal dialog-->
</div>


<div class="modal fade" id="ShowPdfModal" tabindex="-1" aria-hidden="true">
    <!--begin::Modal dialog-->
    <div class="modal-dialog modal-dialog-centered min-w-xl-1000px">
        <!--begin::Modal content-->
        <div class="modal-content">
            <!--begin::Modal header-->
            <div class="modal-header">
                <!--begin::Modal title-->
                <h3 class="fw-boldest text-dark fs-1 mb-0">Read Your Cv Info</h3>
                <!--end::Modal title-->
                <!--begin::Close-->
                <div class="btn btn-icon btn-sm btn-active-icon-primary" data-bs-dismiss="modal">
                    <!--begin::Svg Icon | path: icons/duotune/arrows/arr061.svg-->
                    <span class="svg-icon svg-icon-2x">
                        <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none">
                            <rect opacity="0.5" x="6" y="17.3137" width="16" height="2" rx="1" transform="rotate(-45 6 17.3137)" fill="black" />
                            <rect x="7.41422" y="6" width="16" height="2" rx="1" transform="rotate(45 7.41422 6)" fill="black" />
                        </svg>
                    </span>
                    <!--end::Svg Icon-->
                </div>
                <!--end::Close-->
            </div>
            <!--end::Modal header-->
            <!--begin::Modal body-->
            <div class="modal-body scroll-y mx-5 mx-xl-15 my-7">
                <embed id="CurrentUserCV" src="" type="application/pdf" width="800" height="400" allowfullscreen="true"/>
            </div>
            <!--end::Modal body-->
        </div>
        <!--end::Modal content-->
    </div>
    <!--end::Modal dialog-->
</div>



@section Scripts{

    <script>
        $(document).ready(function () {

            $("#tblUserList").DataTable({
                "language": {
                    "lengthMenu": "Show _MENU_",
                },
                "dom":
                    "<'row'" +
                    "<'col-sm-6 d-flex align-items-center justify-conten-start'l>" +
                    "<'col-sm-6 d-flex align-items-center justify-content-end'f>" +
                    ">" +

                    "<'table-responsive'tr>" +

                    "<'row'" +
                    "<'col-sm-12 col-md-5 d-flex align-items-center justify-content-center justify-content-md-start'i>" +
                    "<'col-sm-12 col-md-7 d-flex align-items-center justify-content-center justify-content-md-end'p>" +
                    ">"
            });


            $("#CountryId").change(function () {
                var _countryId = $(this).val();
                $("#CityId").empty();
                $.get("/MasterData/CityInfo/CityLoadByCountryId", { countryId: _countryId }, function (data) {
                    var option = "<option>---Select---</option>";
                    $.each(data, function (i, _data) {
                        option += "<option value=" + _data.id + ">" + _data.cityName + "</option>";
                    });
                    $("#CityId").html(option);
                });
            });


            $("#DateOfBirth").flatpickr();
            //Reset Password Validation

            // Define form element
            const form = document.getElementById('kt_docs_formvalidation_password');

            // Init form validation rules. For more info check the FormValidation plugin's official documentation:https://formvalidation.io/
            var validator = FormValidation.formValidation(
                form,
                {
                    fields: {
                        'new_password': {
                            validators: {
                                notEmpty: {
                                    message: 'The password is required'
                                },
                                callback: {
                                    message: 'Please enter valid password',
                                    callback: function (input) {
                                        if (input.value.length > 0) {
                                            return validatePassword();
                                        }
                                    }
                                }
                            }
                        },
                        'confirm_password': {
                            validators: {
                                notEmpty: {
                                    message: 'The password confirmation is required'
                                },
                                identical: {
                                    compare: function () {
                                        return form.querySelector('[name="new_password"]').value;
                                    },
                                    message: 'The password and its confirm are not the same'
                                }
                            }
                        },
                    },

                    plugins: {
                        trigger: new FormValidation.plugins.Trigger(),
                        bootstrap: new FormValidation.plugins.Bootstrap5({
                            rowSelector: '.fv-row',
                            eleInvalidClass: '',
                            eleValidClass: ''
                        })
                    }
                }
            );

            // Submit button handler
            const submitButton = document.getElementById('kt_docs_formvalidation_password_submit');
            submitButton.addEventListener('click', function (e) {
                // Prevent default button action
                e.preventDefault();

                // Validate form before submit
                if (validator) {
                    validator.validate().then(function (status) {
                        console.log('validated!');

                        if (status == 'Valid') {
                            // Show loading indication
                            submitButton.setAttribute('data-kt-indicator', 'on');

                            // Disable button to avoid multiple click
                            submitButton.disabled = true;

                            // Simulate form submission. For more info check the plugin's official documentation: https://sweetalert2.github.io/
                            setTimeout(function () {
                                // Remove loading indication
                                submitButton.removeAttribute('data-kt-indicator');

                                // Enable button
                                submitButton.disabled = false;

                                // Show popup confirmation
                                let frmData = {
                                    userName: $("#userName").val(),
                                    /*  NewPassword: $("#password").val(),*/
                                    NewPassword: $("#new_password").val(),
                                    __RequestVerificationToken: getAntiforgeryToken()
                                }

                                        $.ajax({
                                            url: '/Auth/Manage/ResetPassword',
                                            data: frmData,
                                            type: "POST",
                                            beforeSend: function () {
                                                $('#kt_docs_formvalidation_password_submit').attr('disabled', 'disabled');
                                                $('#kt_docs_formvalidation_password_submit').val('Submitting...');
                                            },
                                            success: function (data) {
                                                $('#kt_docs_formvalidation_password')[0].reset();
                                                $('#kt_docs_formvalidation_password_submit').attr('disabled', false);
                                                $('#kt_docs_formvalidation_password_submit').val('Submit');
                                                $('#resetPasswordModal').modal('hide');
                                                if (data) {
                                                    swal.fire('success', 'Saved Successfully!', 'success').then(function () {
                                                        location.reload();
                                                    });
                                                } else {
                                                    swal.fire('warning', 'Internal Server Error!', 'warning');
                                                }
                                            },
                                            error: function () {
                                                $('#resetPasswordModal').modal('hide');
                                                $('#kt_docs_formvalidation_password')[0].reset();
                                                $('#kt_docs_formvalidation_password_submit').attr('disabled', false);
                                                $('#kt_docs_formvalidation_password_submit').val('Submit');
                                                swal.fire('warning', 'Failed!', 'warning');
                                            }
                                        });


                                //form.submit(); // Submit form
                            }, 2000);
                        }
                    });
                }
            });


        });


         $('#btnSave').click(function () {
            $('#frmData').on('submit', function (event) {
                event.preventDefault();
                var formdata = $(this).serialize();
                Swal.fire({
                    title: 'Are you sure?',
                    text: "You want to save this!",
                    icon: 'warning',
                    showCancelButton: true,
                    confirmButtonColor: '#3085d6',
                    cancelButtonColor: '#d33',
                    confirmButtonText: 'Yes, save it!'
                }).then((result) => {
                    if (result.isConfirmed) {
                        $.ajax({
                            url: '/Auth/Manage/EditRole',
                            data: formdata,
                            type: "POST",
                            beforeSend: function () {
                                $('#btnSave').attr('disabled', 'disabled');
                                $('#btnSave').val('Submitting...');
                            },
                            success: function (data) {
                                $('#frmData')[0].reset();
                                $('#btnSave').attr('disabled', false);
                                $('#btnSave').val('Submit');
                                $('#EditUserInfoModal').modal('hide');
                                if (data) {
                                    swal.fire('success', 'Saved Successfully!', 'success').then(function () {
                                        location.reload();
                                    });
                                } else {
                                    swal.fire('warning', 'Internal Server Error!', 'warning');
                                }
                            },
                            error: function () {
                                $('#EditUserInfoModal').modal('hide');
                                $('#frmData')[0].reset();
                                $('#btnSave').attr('disabled', false);
                                $('#btnSave').val('Submit');
                                swal.fire('warning', 'Failed!', 'warning');
                            }
                        });
                    }
                })
            })
        })


        function SetUserInfo(userName, uid) {
            $('#kt_docs_formvalidation_password')[0].reset();
            $("#userName").val(userName);
           /* $("#password").val("");*/
            $("#new_password").val("");
        }

        function Edit(aspnetId,FirstName,LastName,UserName,Email,roleName,roleId,userCountryId,userCityId,userImg,userCV,mobileNo,DateOfBirth) {
            //$("#userName1").val(UserName);
            $("#userId").val(aspnetId);
            $("#PreRoleId").val(roleName);
            $("#RoleId").val(roleName);
            $("#email").val(Email);
            $("#CountryId").val(userCountryId);
            $("#CityId").val(userCityId);
            $("#FirstName").val(FirstName);
            $("#LastName").val(LastName);
            $("#mobileNo").val(mobileNo);
            $("#DateOfBirth").val(DateOfBirth);

            $("#userImageShow").attr("src", "/UsersPhoto/" + userImg);

            $('#EditUserInfoModal').modal('show');

        }

        function ShowPdf(userCV) {
            $("#CurrentUserCV").attr("src", "/UsersCV/" + userCV +"#toolbar=0");
            $('#ShowPdfModal').modal('show');
        }



         function getAntiforgeryToken() {
            var token = '@Html.AntiForgeryToken()';
            token = $(token).val();
            return token;
         }



        function Active(aspnetId) {
            Swal.fire({
                title: 'Are you sure?',
                text: "You want to Active this User!",
                icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#3085d6',
                cancelButtonColor: '#d33',
                confirmButtonText: 'Yes, Active it!'
            }).then((result) => {
                if (result.isConfirmed) {
                    $.ajax({
                        url: "/Auth/Manage/UpdateStatus?Id=" + aspnetId + "&status=1",
                        type: 'GET'
                    }).done(function (data) {

                        if (data = "success") {
                            Swal.fire({ icon: 'success', title: 'User Active Successfull!!', showConfirmButton: false, timer: 1000 }).then(function () {
                                window.location.reload();
                            })

                        } else {
                            swal.fire('warning', 'Internal Server Error!', 'warning');
                        }

                    })
                        .fail(function () {
                            swal.fire('warning', 'Error!', 'warning');
                        });
                }
            });
        }


        function InActive(aspnetId) {
            Swal.fire({
                title: 'Are you sure?',
                text: "You want to InActive this User!",
                icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#3085d6',
                cancelButtonColor: '#d33',
                confirmButtonText: 'Yes, Active it!'
            }).then((result) => {
                if (result.isConfirmed) {
                    $.ajax({
                        url: "/Auth/Manage/UpdateStatus?Id=" + aspnetId + "&status=0",
                        type: 'GET'
                    }).done(function (data) {

                        if (data = "success") {
                            Swal.fire({ icon: 'success', title: 'User InActive Successfull!!', showConfirmButton: false, timer: 1000 }).then(function () {
                                window.location.reload();
                            })

                        } else {
                            swal.fire('warning', 'Internal Server Error!', 'warning');
                        }

                    })
                        .fail(function () {
                            swal.fire('warning', 'Error!', 'warning');
                        });
                }
            });
        }

        function Remove(aspnetId, user) {
             if (user == '@User.Identity.Name') {
                 swal.fire('warning', 'Cannot Delete Current User!', 'warning');
                return false;
             } else {
                 Swal.fire({
                     title: 'Are you sure?',
                     text: "You want to Active this User!",
                     icon: 'warning',
                     showCancelButton: true,
                     confirmButtonColor: '#3085d6',
                     cancelButtonColor: '#d33',
                     confirmButtonText: 'Yes, Active it!'
                 }).then((result) => {
                     if (result.isConfirmed) {
                         $.ajax({
                             url: "/Auth/Manage/Delete?Id=" + aspnetId,
                             type: 'GET'
                         }).done(function (data) {

                             if (data = user) {
                                 Swal.fire({ icon: 'success', title: 'User' + data+'Deleted Successfull!!', showConfirmButton: false, timer: 1000 }).then(function () {
                                     window.location.reload();
                                 })

                             } else {
                                 swal.fire('warning', 'Internal Server Error!', 'warning');
                             }

                         })
                             .fail(function () {
                                 swal.fire('warning', 'Error!', 'warning');
                             });
                     }
                 });
             }

        }


    </script>
}
